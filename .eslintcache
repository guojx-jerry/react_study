[{"C:\\Users\\Administrator\\Desktop\\react学习\\react_study\\src\\index.js":"1","C:\\Users\\Administrator\\Desktop\\react学习\\react_study\\src\\App.js":"2","C:\\Users\\Administrator\\Desktop\\react学习\\react_study\\src\\pages\\admin\\index.js":"3","C:\\Users\\Administrator\\Desktop\\react学习\\react_study\\src\\pages\\login\\index.js":"4","C:\\Users\\Administrator\\Desktop\\react学习\\react_study\\src\\api\\ajax.js":"5","C:\\Users\\Administrator\\Desktop\\react学习\\react_study\\src\\api\\index.js":"6","C:\\Users\\Administrator\\Desktop\\react学习\\react_study\\src\\utils\\memoryUtils.js":"7","C:\\Users\\Administrator\\Desktop\\react学习\\react_study\\src\\utils\\storageUtils.js":"8"},{"size":268,"mtime":1611199255303,"results":"9","hashOfConfig":"10"},{"size":866,"mtime":1611132073878,"results":"11","hashOfConfig":"10"},{"size":1003,"mtime":1611201241453,"results":"12","hashOfConfig":"10"},{"size":6567,"mtime":1611201079365,"results":"13","hashOfConfig":"10"},{"size":1393,"mtime":1611130399574,"results":"14","hashOfConfig":"10"},{"size":264,"mtime":1611129027231,"results":"15","hashOfConfig":"10"},{"size":201,"mtime":1611201079382,"results":"16","hashOfConfig":"10"},{"size":754,"mtime":1611201079356,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1jz787t",{"filePath":"20","messages":"21","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22","usedDeprecatedRules":"23"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"26","messages":"27","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"23"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"23"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},"C:\\Users\\Administrator\\Desktop\\react学习\\react_study\\src\\index.js",[],"C:\\Users\\Administrator\\Desktop\\react学习\\react_study\\src\\App.js",["38"],"import React,{Component} from 'react'\r\nimport {BrowserRouter, Link, Route ,Switch} from 'react-router-dom'\r\nimport Login from './pages/login'\r\nimport Admin from './pages/admin'\r\n/*\r\n应用的根组件\r\n */\r\nexport default class App extends Component {\r\n\r\n\r\n    render() {\r\n        return (\r\n\r\n            <BrowserRouter>\r\n                {/*<ul>*/}\r\n                {/*    <li><Button type='primary'><Link to='/login'></Link>登录界面</Button></li>*/}\r\n                {/*    <li><Button type='primary'><Link to='/admin'></Link>管理界面</Button></li>*/}\r\n                {/*</ul>*/}\r\n                {/*只匹配一个*/}\r\n                <Switch>\r\n                    <Route path='/login' component={Login}/>\r\n\r\n                    <Route path='/' component={Admin}></Route>\r\n                </Switch>\r\n\r\n\r\n\r\n            </BrowserRouter>\r\n        )\r\n    }\r\n}",["39","40"],"C:\\Users\\Administrator\\Desktop\\react学习\\react_study\\src\\pages\\admin\\index.js",["41"],"C:\\Users\\Administrator\\Desktop\\react学习\\react_study\\src\\pages\\login\\index.js",["42","43","44"],"import React,{Component} from 'react'\r\nimport './login.less'\r\nimport { Form, Input, Button, } from 'antd';\r\nimport { UserOutlined, LockOutlined } from '@ant-design/icons';\r\nimport {reqLogin} from \"../../api\";\r\nimport logo from './img/jerry.png'\r\nimport axios from \"axios\";\r\nimport {message} from \"antd\";\r\nimport memoryUtils from \"../../utils/memoryUtils\";\r\nimport {getUser, saveToken, saveUser} from '../../utils/storageUtils'\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\n/*\r\n登录的路由组件\r\n */\r\nclass Login extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n/*\r\nasync和await\r\n1、作用：简化promise对象的使用：不用再使用.then()来指定成功/失败的回调函数，以同步编码（没有回调函数）的方式实现异步流程\r\n2、哪里用await：在返回promise的表达式左侧写await：不想要promise，想要promise异步执行的成功的value数据\r\n3、哪里写async：await所在的最近的函数定义的左侧\r\n */\r\n    handleCommit = (async (values) => {\r\n        const {username,password} = values\r\n            const response = await reqLogin({\r\n                cardID:username,\r\n                password:password\r\n            })\r\n            console.log('请求成功',response)\r\n        const result = response.headers.status\r\n        if(result==0){\r\n            message.error('用户名不存在或者密码错误');\r\n        }else{\r\n            message.success('登陆成功')\r\n            //保存用户\r\n            localStorage.setItem('user',response.headers['user'])//保存到内存中\r\n            saveUser(response.headers['user']);//保存到local中\r\n            //跳转到管理界面(不需要再回退回来)\r\n            this.props.history.replace('/')\r\n\r\n        }\r\n\r\n\r\n\r\n\r\n\r\n            //     .then((res)=>{\r\n            //         console.log(res);\r\n            //         if(res.headers['user-token']){\r\n            //             localStorage.setItem('token',res.headers['user-token']);\r\n            //         }\r\n            //     }).catch(error=>{\r\n            //         console.log(error)\r\n            // })\r\n\r\n\r\n\r\n\r\n    });\r\n    handleCommit1=(values)=>{\r\n        debugger;\r\n        return new Promise(function(resolve,reject){\r\n            axios({\r\n                url:'/account/login',\r\n                method:'post',\r\n                headers:{\r\n                    'Content-type':'application/json;charset=UTF-8'\r\n                },\r\n                data:JSON.stringify({\r\n                    cardID:values.username,\r\n                    password:values.password\r\n                })\r\n            })\r\n                .then((res)=>{\r\n                    console.log(res)\r\n                    if(res.headers['user-token']){\r\n                        // localStorage.setItem('token',res.headers['user-token']);\r\n                        saveToken(res.headers['user-token'])\r\n                    }\r\n                })\r\n        })\r\n    };\r\n\r\n\r\n\r\n    render() {\r\n        //如果检测到用户登陆，自动跳转到管理页面\r\n        const user = getUser();\r\n        if(!user){\r\n        return(\r\n            <div className=\"login\">\r\n                <header className='login-header'>\r\n                    <img src={logo} alt='Jerry' />\r\n                    <h1>React项目：医疗挂号系统</h1>\r\n                </header>\r\n                <section className='login-content'>\r\n                    <h2>用户登录</h2>\r\n                    <div><Form\r\n                        name=\"normal_login\"\r\n                        className=\"login-form\"\r\n                        initialValues={{\r\n                            remember: true,\r\n                        }}\r\n                        onFinish={this.handleCommit}\r\n                    >\r\n                        <Form.Item\r\n                            name=\"username\"\r\n                            rules={[\r\n                                {\r\n                                    required: true,\r\n                                    whitespace:true,\r\n                                    message: '请输入用户名',\r\n                                },\r\n                                {\r\n                                    min:4,\r\n                                    message:'用户名至少为4位',\r\n                                },\r\n                                {\r\n                                    max:12,\r\n                                    message:'用户名最多为12位',\r\n                                }\r\n                            ]}\r\n                        >\r\n                            <Input prefix={<UserOutlined className=\"site-form-item-icon\" />} placeholder=\"Username\" />\r\n                        </Form.Item>\r\n                        <Form.Item\r\n                            name=\"password\"\r\n                            rules={[\r\n                                {\r\n                                    required:false,\r\n                                    whitespace:true,\r\n                                    message:'密码必须填写',\r\n\r\n                                },\r\n                                {\r\n                                    pattern:/^\\w+$/,\r\n                                    message:'密码必须由英文、数字、下划线组成'\r\n                                },\r\n                                {\r\n                                    min:4,\r\n                                    message:'密码至少为4位',\r\n                                },\r\n                                {\r\n                                    max:12,\r\n                                    message:'密码最多为12位',\r\n                                }\r\n\r\n                            ]}\r\n                        >\r\n                            <Input\r\n                                prefix={<LockOutlined className=\"site-form-item-icon\" />}\r\n                                type=\"password\"\r\n                                placeholder=\"Password\"\r\n                            />\r\n                        </Form.Item>\r\n\r\n\r\n                        <Form.Item>\r\n                            <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\r\n                                登陆\r\n                            </Button>\r\n                        </Form.Item>\r\n                    </Form></div>\r\n                </section>\r\n            </div>\r\n\r\n        )}\r\n        else {\r\n            message.success('检测到登陆用户'+user+',自动登陆...')\r\n            return <Redirect to='/'/>\r\n        }\r\n    }\r\n}\r\n\r\nexport default Login","C:\\Users\\Administrator\\Desktop\\react学习\\react_study\\src\\api\\ajax.js",["45","46"],"import axios from \"axios\";\r\nimport {message} from \"antd\";\r\n\r\n\r\n/*\r\n能发送异步ajax请求的函数模块\r\n封装axios库\r\n函数的返回值是一个promise对象\r\n1、优化：统一处理请求异常\r\n */\r\nfunction ajax(url,data={},method='GET') {\r\n    if (method == 'GET') { //发送get请求\r\n        return axios.get(url, {//配置对象\r\n                params: data//指定请求参数\r\n            })\r\n\r\n    } else {//发送post请求\r\n        return axios({\r\n            method: 'POST',\r\n            url: url,\r\n            data: JSON.stringify(data),\r\n            headers: {\r\n                'Content-type': 'application/json;charset=UTF-8'\r\n            }\r\n            ,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport default ajax","C:\\Users\\Administrator\\Desktop\\react学习\\react_study\\src\\api\\index.js",[],"C:\\Users\\Administrator\\Desktop\\react学习\\react_study\\src\\utils\\memoryUtils.js",["47"],"C:\\Users\\Administrator\\Desktop\\react学习\\react_study\\src\\utils\\storageUtils.js",[],{"ruleId":"48","severity":1,"message":"49","line":2,"column":24,"nodeType":"50","messageId":"51","endLine":2,"endColumn":28},{"ruleId":"52","replacedBy":"53"},{"ruleId":"54","replacedBy":"55"},{"ruleId":"48","severity":1,"message":"56","line":2,"column":8,"nodeType":"50","messageId":"51","endLine":2,"endColumn":19},{"ruleId":"48","severity":1,"message":"56","line":9,"column":8,"nodeType":"50","messageId":"51","endLine":9,"endColumn":19},{"ruleId":"57","severity":1,"message":"58","line":17,"column":5,"nodeType":"59","messageId":"60","endLine":19,"endColumn":6},{"ruleId":"61","severity":1,"message":"62","line":40,"column":18,"nodeType":"63","messageId":"64","endLine":40,"endColumn":20},{"ruleId":"48","severity":1,"message":"65","line":2,"column":9,"nodeType":"50","messageId":"51","endLine":2,"endColumn":16},{"ruleId":"61","severity":1,"message":"62","line":11,"column":16,"nodeType":"63","messageId":"64","endLine":11,"endColumn":18},{"ruleId":"66","severity":1,"message":"67","line":7,"column":1,"nodeType":"68","endLine":10,"endColumn":2},"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","no-native-reassign",["69"],"no-negated-in-lhs",["70"],"'memoryUtils' is defined but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'message' is defined but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation"]